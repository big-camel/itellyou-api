<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itellyou.dao.user.UserStarDao">
    <sql id="columns">
        ${alias}user_id ${prefix}user_id,
        ${alias}created_time ${prefix}created_time,
        ${alias}created_ip ${prefix}created_ip,
        ${alias}created_user_id ${prefix}created_user_id
    </sql>
    <insert id="insert">
        insert into user_star (user_id,created_time,created_ip,created_user_id) values (#{userId},#{createdTime},#{createdIp},#{createdUserId})
    </insert>
    <delete id="delete">
        delete from user_star where user_id=#{userId} and created_user_id=#{followerId}
    </delete>
    <sql id="where">
        <where>
            <if test="beginTime != null">
                and ${alias}created_time <![CDATA[>=]]> #{beginTime}
            </if>
            <if test="endTime != null">
                and ${alias}created_time <![CDATA[<=]]> #{endTime}
            </if>
            <if test="ip != null">
                and ${alias}created_ip = #{ip}
            </if>
            <if test="userIds != null">
                and ${alias}user_id in
                <foreach collection="userIds" item="userId" separator="," open="(" close=")" >
                    #{userId}
                </foreach>
            </if>
            <if test="followerId != null">
                and ${alias}created_user_id = #{followerId}
            </if>
        </where>
    </sql>
    <select id="search" resultType="UserStarModel">
        select
        <include refid="columns">
            <property name="alias" value="s."/>
            <property name="prefix" value=""/>
        </include>
        from user_star s
        <include refid="where">
            <property name="alias" value="s."/>
        </include>
        <if test="order != null">
            <foreach collection="order" index="key" item="value" open="order by " separator=",">
                <choose>
                    <when test="key.indexOf('.') >= 0">${key} ${value}</when>
                    <otherwise>s.${key} ${value}</otherwise>
                </choose>
            </foreach>
        </if>
        <if test="limit != null and offset != null">
            limit #{offset},#{limit}
        </if>
    </select>
    <select id="count" resultType="Integer">
        select count(*)
        from user_star s
        <include refid="where">
            <property name="alias" value="s."/>
        </include>
    </select>
</mapper>