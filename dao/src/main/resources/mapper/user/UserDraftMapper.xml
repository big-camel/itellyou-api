<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itellyou.dao.user.UserDraftDao">
    <sql id="columns">
        ${alias}author_id ${prefix}author_id,
        ${alias}url ${prefix}url,
        ${alias}title ${prefix}title,
        ${alias}content ${prefix}content,
        ${alias}data_type ${prefix}data_type,
        ${alias}data_key ${prefix}data_key,
        ${alias}created_time ${prefix}created_time,
        ${alias}created_ip ${prefix}created_ip,
        ${alias}created_user_id ${prefix}created_user_id
    </sql>
    <select id="exists" resultType="Integer">
        select count(*) from user_draft where created_user_id=#{userId} and data_type=#{dataType} and data_key=#{dataKey}
    </select>
    <insert id="insert">
        insert into user_draft (author_id,url,title,content,data_type,data_key,created_time,created_ip,created_user_id) values (#{authorId},#{url},#{title},#{content},#{dataType},#{dataKey},#{createdTime},#{createdIp},#{createdUserId})
    </insert>
    <insert id="insertOrUpdate">
        insert into user_draft (author_id,url,title,content,data_type,data_key,created_time,created_ip,created_user_id) values (#{authorId},#{url},#{title},#{content},#{dataType},#{dataKey},#{createdTime},#{createdIp},#{createdUserId})
        on duplicate key update url=#{url},title=#{title},content=#{content},created_time=#{createdTime},created_ip=#{createdIp}
    </insert>
    <delete id="delete">
        delete from user_draft where created_user_id=#{userId} and data_type=#{dataType} and data_key=#{dataKey}
    </delete>
    <resultMap id="searchMap" type="UserDraftDetailModel" autoMapping="true">
        <id property="id" column="id" />
        <association property="author"  notNullColumn="id" javaType="UserDetailModel" columnPrefix="u_" autoMapping="true">
            <id property="id" column="id" />
        </association>
    </resultMap>
    <sql id="where">
        <where>
            <if test="beginTime != null">
                and ${alias}created_time <![CDATA[>=]]> #{beginTime}
            </if>
            <if test="endTime != null">
                and ${alias}created_time <![CDATA[<=]]> #{endTime}
            </if>
            <if test="ip != null">
                and ${alias}created_ip = #{ip}
            </if>
            <if test="userId != null">
                and ${alias}created_user_id = #{userId}
            </if>
            <if test="dataType != null">
                and ${alias}data_type = #{dataType}
            </if>
            <if test="dataKey != null">
                and ${alias}data_key = #{dataKey}
            </if>
            <if test="authorId != null">
                and ${alias}author_id = #{authorId}
            </if>
        </where>
    </sql>
    <select id="search" resultMap="searchMap">
        select
        <include refid="columns">
            <property name="alias" value="d."/>
            <property name="prefix" value=""/>
        </include>,
        <include refid="com.itellyou.dao.user.UserInfoDao.columns">
            <property name="alias" value="u."/>
            <property name="prefix" value="u_"/>
        </include>,p.path u_path
        from user_draft d
        left join user_info u on d.author_id = u.id
        left join sys_path p on p.id = u.id and p.type = 1
        <include refid="where">
            <property name="alias" value="d."/>
        </include>
        <if test="order != null">
            <foreach collection="order" index="key" item="value" open="order by " separator=",">
                <choose>
                    <when test="key.indexOf('.') >= 0">${key} ${value}</when>
                    <otherwise>d.${key} ${value}</otherwise>
                </choose>
            </foreach>
        </if>
        <if test="limit != null and offset != null">
            limit #{offset},#{limit}
        </if>
    </select>
    <select id="count" resultType="Integer">
        select count(*)
        from user_draft d
        left join user_info u on d.author_id = u.id
        <include refid="where">
            <property name="alias" value="d."/>
        </include>
    </select>
</mapper>