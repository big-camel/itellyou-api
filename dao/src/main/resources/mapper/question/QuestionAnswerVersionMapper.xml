<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itellyou.dao.question.QuestionAnswerVersionDao">
    <sql id="columns">
        ${alias}answer_id,
        ${alias}content,
        ${alias}html,
        ${alias}description,
        ${alias}version,
        ${alias}is_reviewed,
        ${alias}is_disabled,
        ${alias}is_published,
        ${alias}save_type,
        ${alias}remark,
        ${alias}created_time,
        ${alias}created_user_id,
        ${alias}created_ip,
        ${alias}updated_time,
        ${alias}updated_user_id,
        ${alias}updated_ip
    </sql>
    <sql id="primary">id</sql>
    <select id="findVersionById" resultType="java.lang.Integer">
        select version from question_answer_version where id = #{id}
    </select>
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into question_answer_version(<include refid="columns"><property name="alias" value=""/></include>)
        select #{answerId},#{content},#{html},#{description},
        <choose>
            <when test="version == null || version == 0">
                count(id) + 1
            </when>
            <otherwise>
                #{version}
            </otherwise>
        </choose>
        ,#{isReviewed},#{isDisabled},#{isPublished},#{saveType},#{remark},
        #{createdTime},#{createdUserId},#{createdIp},#{updatedTime},#{updatedUserId},#{updatedIp}
        <if test="version == null || version == 0">
            from question_answer_version where answer_id=#{answerId}
        </if>
    </insert>
    <sql id="where">
        <if test="isReviewed != null">
            ${alias}is_reviewed = #{isReviewed}
        </if>
        <if test="isDisabled != null">
            and ${alias}is_disabled = #{isDisabled}
        </if>
        <if test="isPublished != null">
            and ${alias}is_published = #{isPublished}
        </if>
        <if test="beginTime != null">
            and ${alias}created_time <![CDATA[>=]]> #{beginTime}
        </if>
        <if test="endTime != null">
            and ${alias}created_time <![CDATA[<=]]> #{endTime}
        </if>
        <if test="ip != null">
            and ${alias}created_ip = #{ip}
        </if>
        <if test="answerMap != null &amp;&amp; answerMap.size() > 0">
            <foreach collection="answerMap.entrySet()" item="value" index="key" separator=" or " open=" and (" close=")">
                ${alias}answer_id=#{key}
                <if test="value != null">
                    and ${alias}version=#{value}
                </if>
            </foreach>
        </if>
        <if test="userId != null">
            and ${alias}created_user_id = #{userId}
        </if>
        <if test="ids != null &amp;&amp; ids.size() > 0">
            and
            ${alias}id <foreach collection="ids" item="id" open=" in (" separator="," close=")">
                #{id}
            </foreach>
        </if>
    </sql>
    <select id="search" resultType="QuestionAnswerVersionModel">
        select v.id,v.answer_id,v.version,v.is_reviewed,v.is_disabled,v.is_published,v.save_type,v.remark,v.created_time,v.created_ip,v.created_user_id,v.description
        <if test="hasContent != false">
            ,v.content,
            v.html

        </if>
        from question_answer_version v

        <where>
            <include refid="where">
                <property name="alias" value="v."/>
            </include>
        </where>
        <if test="order != null">
            <foreach collection="order" index="key" item="value" open="order by " separator=",">
                v.${key} ${value}
            </foreach>
        </if>
        <if test="limit != null and offset != null">
            limit #{offset},#{limit}
        </if>
    </select>
    <select id="count" resultType="java.lang.Integer">
        select count(v.id) from from question_answer_version v
        <where>
            <include refid="where">
                <property name="alias" value="v."/>
            </include>
        </where>
    </select>
</mapper>